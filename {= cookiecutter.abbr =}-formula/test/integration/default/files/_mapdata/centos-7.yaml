# yamllint disable rule:indentation rule:line-length
# CentOS Linux-7
---
values:
  added_in_defaults: defaults_value
  added_in_lookup: lookup_value
  added_in_pillar: pillar_value
  lookup:
    arch: amd64
    rootgroup: root
    compose:
      create_pod: null
      pod_args: null
      project_name: {= cookiecutter.project_name =}
      remove_orphans: true
      service:
        container_prefix: null
        ephemeral: true
        pod_prefix: null
        restart_policy: on-failure
        separator: null
        stop_timeout: null
    paths:
      base: /opt/containers/{= cookiecutter.project_name =}
      compose: docker-compose.yml
{!- for cnt in cookiecutter.containers.split(",") !}
      config_{= cnt =}: {= cnt =}.env
{!- endfor !}
{!- if "paths" in cookiecutter._lookup !}
      {= cookiecutter._lookup.paths | yaml(False) | indent(6) =}
{!- endif !}
    user:
      groups: []
      home: null
      name: {= cookiecutter.project_name =}
      shell: /usr/sbin/nologin
      uid: null
{!- if cookiecutter._lookup !}
{!-   for var, val in cookiecutter._lookup.items() !}
{!-     if "paths" != var !}
    {= {var: val} | yaml(False) | indent(4) =}
{!-     endif !}
{!-   endfor !}
{!- endif !}
  install:
    rootless: true
    remove_all_data_for_sure: false
{!- if "install" in cookiecutter._settings !}
    {= cookiecutter._settings.install | yaml(False) | indent(4) =}
{!- endif !}
{!- if cookiecutter._settings !}
{!-   for var, val in cookiecutter._settings.items() !}
{!-     if "install" != var !}
  {= {var: val} | yaml(False) | indent(2) =}
{!-     endif !}
{!-   endfor !}
{!- endif !}
  map_jinja:
    sources:
    - Y:G@osarch
    - Y:G@os_family
    - Y:G@os
    - Y:G@osfinger
    - C@{= cookiecutter.abbr_pysafe =}
    - Y:G@id
  master: template-master
  tofs:
    files_switch:
    - any/path/can/be/used/here
    - id
    - roles
    - osfinger
    - os
    - os_family
    source_files:
      {= cookiecutter.name =} environment file is managed:
      - {= cookiecutter.abbr_pysafe =}.env.j2
  winner: pillar
